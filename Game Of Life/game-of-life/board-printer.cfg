//
// @author wesen
// @copyright 2021 wesen <wesen-ac@web.de>
//

//
// Board printer module for game-of-life
//
// Provides functions to print boards
//
// Requires:
//   * scripts/game-of-life/unpersist/declarations.cfg
//   * scripts/game-of-life/unpersist/functions.cfg
//   * scripts/game-of-life/board.cfg
//

persistidents 0;


// Public Functions

//
// Initializes the menu that will be used to print board fields.
//
// @param int numberOfRows ($arg1) The number of rows to show
//
function initializeBoardOutput [

  numberOfRows = $arg1;

  delmenu "GameOfLife";
  closemenu "GameOfLife";

  newmenu "GameOfLife";
  menuitemcheckbox "Stop simulation" [ (getIsGameOfLifeStopRequested) ][ requestGameOfLifeStop; return -1 ];
  menuitem;
  loop i $numberOfRows [
    execute (format "menuitemvar [ generateBoardFieldRowOutputString %1 ]" $i);
  ]

]

//
// Prints the current board fields.
//
function printBoard [
  closemenu "GameOfLife";
  showmenu "GameOfLife";
]


// Private Functions

//
// Generates and returns a board field row output string.
//
// @param int rowNumber ($arg1) The board field row for which to generate a output string
//
// @return string The generated output string
//
function generateBoardFieldRowOutputString [

  rowNumber = $arg1;

  rowFields = (getRowFields $rowNumber);
  rowFieldsOutputString = "";

  isFirstRowField = 1;
  ulooplist $rowFields rowField [

    if ($isFirstRowField) [
      isFirstRowField = 0;
    ][
      rowFieldsOutputString = (concatword $rowFieldsOutputString " ");
    ]

    if (= $rowField 1) [
      rowFieldSymbol = "O";
    ][
      rowFieldSymbol = " ";
    ]

    rowFieldsOutputString = (concatword $rowFieldsOutputString $rowFieldSymbol);

  ]

  return $rowFieldsOutputString;

]
