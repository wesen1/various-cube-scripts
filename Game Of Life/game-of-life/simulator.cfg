//
// @author wesen
// @copyright 2021 wesen <wesen-ac@web.de>
//

//
// Game of Life simulator module for game-of-life
//
// Provides functions to start the simulation
//
// Requires:
//   * scripts/game-of-life/unpersist/declarations.cfg
//   * scripts/game-of-life/board-printer.cfg
//   * scripts/game-of-life/board.cfg
//   * scripts/game-of-life/game-step-calculator.cfg
//

persistidents 0;


//
// Stores whether currently a stop for the simulation is requested
//
// @var int isGameOfLifeStopRequested
//
checkinit isGameOfLifeStopRequested 0;


// Public Functions

//
// Returns whether currently a stop for the simulation is requested.
//
// @return int 1 if a stop is requested, 0 otherwise
//
function getIsGameOfLifeStopRequested [
  return $isGameOfLifeStopRequested;
]


//
// Starts the Game of Life simulation.
//
// @param int boardHeight ($arg1) The board height (Default: 10)
// @param int boardWidth ($arg2) The board width (Defult: 10)
//
function startGameOfLife [

  if (>= $numargs 1) [
    boardHeight = $arg1;
  ][
    boardHeight = 10;
  ]

  if (>= $numargs 2) [
    boardWidth = $arg2;
  ][
    boardWidth = 10;
  ]

  isGameOfLifeStopRequested = 0;
  initializeBoardFields $boardHeight $boardWidth;
  initializeBoardOutput $boardHeight;
  simulateNextStep;

]

//
// Sets the isGameOfLifeStopRequested flag to 1 so that the simulation stops after the next step.
//
function requestGameOfLifeStop [
  isGameOfLifeStopRequested = 1;
]


// Private Functions

//
// Shows the next board, calculates the next board and calls this function again after a certain sleep time.
// Will not continue if a stop was requested or if the board fields didn't change compared to the previous
// board fields.
//
function simulateNextStep [

  printBoard;

  newBoardFields = (calculateStep);
  boardFieldsChanged = (! (strcmp (getBoardFields) $newBoardFields));
  setBoardFields $newBoardFields;

  if (getIsGameOfLifeStopRequested) [
    echo (c Q) "Simulation stopped on request";
  ][
    if ($boardFieldsChanged) [
      sleep 100 [ simulateNextStep ];
    ][
      echo (c J) "Simulation finished";
    ]
  ]

]
